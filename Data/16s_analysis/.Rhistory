cor.top = prune_taxa(names(sort(taxa_sums(percent.cor), TRUE))[1:10], percent.cor)
##Okay now we have water top abundance for each sample by sample.id
#######################
##Now we need to repeat to get it for corals##
percent.cor <- physeq.coral.r %>%
tax_glom(taxrank = "Genus", NArm=TRUE) #%>%
#transform_sample_counts(function(x) {x/sum(x)} )
cor.top = prune_taxa(names(sort(taxa_sums(percent.cor), TRUE))[1:10], percent.cor)
perc.melt.cor <- psmelt(cor.top)
perc.melt.cor$sample.id <- perc.melt.cor$Sample
#summarize genera by sample id
sum.coral.abund <- ddply(perc.melt.cor, c("sample.id", "Genus"), summarise,
N = sum(Abundance)
)
#manipulate data frame so that there is an abundance per sample id for each genus
sum.coral.abund <- sum.coral.abund %>% spread(Genus, N)
View(sum.coral.abund)
print(colnames(sum.coral.abund))
View(perc.melt.cor)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Aestuariicella = Aestuariicella)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Agaribacter = Agaribacter)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cytophagales_Candidatus_Amoebophilus = Candidatus_Amoebophilus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Endozoicomonas = Endozoicomonas)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Glaciecola = Glaciecola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Lactobacillales_Lactobacillus = Lactobacillus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Litoricola = Litoricola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Porticoccus = Porticoccus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Woesearchaeales_SCGC_AAA286E23 = `SCGC_AAA286-E23`)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Uncultured_Alteromonadaceaeae = uncultured)
View(sum.coral.abund)
##Subset data to the top 10 most abundant taxa and add abundances to the erich dataframe
#first with water
percent.trial <- physeq.water.r %>%
tax_glom(taxrank = "Genus", NArm=TRUE)
k
##Okay now we have water top abundance for each sample by sample.id
#######################
##Now we need to repeat to get it for corals##
percent.cor <- physeq.coral.r %>%
tax_glom(taxrank = "Genus", NArm=TRUE) %>%
transform_sample_counts(function(x) {x/sum(x)} )
cor.top = prune_taxa(names(sort(taxa_sums(percent.cor), TRUE))[1:10], percent.cor)
perc.melt.cor <- psmelt(cor.top)
perc.melt.cor$sample.id <- perc.melt.cor$Sample
#summarize genera by sample id
sum.coral.abund <- ddply(perc.melt.cor, c("sample.id", "Genus"), summarise,
N = sum(Abundance)
)
#manipulate data frame so that there is an abundance per sample id for each genus
sum.coral.abund <- sum.coral.abund %>% spread(Genus, N)
print(colnames(sum.coral.abund))
#Rename the columns so that we know it's relative abundance
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Aestuariicella = Aestuariicella)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Agaribacter = Agaribacter)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cytophagales_Candidatus_Amoebophilus = Candidatus_Amoebophilus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Endozoicomonas = Endozoicomonas)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Glaciecola = Glaciecola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Lactobacillales_Lactobacillus = Lactobacillus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Litoricola = Litoricola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Porticoccus = Porticoccus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Woesearchaeales_SCGC_AAA286E23 = `SCGC_AAA286-E23`)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Uncultured_Alteromonadaceaeae = uncultured)
View(sum.coral.abund)
colsums(sum.coral.abund)
col.sums(sum.coral.abund)
colsum(sum.coral.abund)
sum(sum.coral.abund[,2:11])
sum(sum.coral.abund[,2])
sum(sum.coral.abund$RelAbund_Cellvibrionales_Aestuariicella)
sum(sum.water.abund$RelAbund_Rhodospirillales_AEGEAN_169_marine_group)
rowsums(sum.coral.abund[,2:11])
rowSums(sum.coral.abund[,2:11])
rowSums(sum.water.abund[,2:11])
View(sum.coral.abund)
physeq.coral.r <- subset_samples(physeq.coral.r, Sample != "Mock")
View(sample_data(physeq.coral.r))
physeq.coral.r <- subset_samples(physeq.coral.r, sample.type != "mock")
saveRDS(physeq.coral.r, "../../alpha-div/output/physeq-coral-nov21-rarefied.RDS")
#pull in the two phyloseq objects that to grab the beta diversity metrics
physeq.coral.r <- readRDS("../../alpha-div/output/physeq-coral-nov21-rarefied.RDS")
percent.cor <- physeq.coral.r %>%
tax_glom(taxrank = "Genus", NArm=TRUE) %>%
transform_sample_counts(function(x) {x/sum(x)} )
cor.top = prune_taxa(names(sort(taxa_sums(percent.cor), TRUE))[1:10], percent.cor)
perc.melt.cor <- psmelt(cor.top)
perc.melt.cor$sample.id <- perc.melt.cor$Sample
#summarize genera by sample id
sum.coral.abund <- ddply(perc.melt.cor, c("sample.id", "Genus"), summarise,
N = sum(Abundance)
)
#manipulate data frame so that there is an abundance per sample id for each genus
sum.coral.abund <- sum.coral.abund %>% spread(Genus, N)
print(colnames(sum.coral.abund))
#Rename the columns so that we know it's relative abundance
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Aestuariicella = Aestuariicella)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Agaribacter = Agaribacter)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cytophagales_Candidatus_Amoebophilus = Candidatus_Amoebophilus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Endozoicomonas = Endozoicomonas)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Alteromonadales_Glaciecola = Glaciecola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Lactobacillales_Lactobacillus = Lactobacillus)
View(perc.melt.cor)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Litoricola = Litoricola)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Oceanospirillales_Neptuniibacter = Neptuniibacter)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Cellvibrionales_Porticoccus = Porticoccus)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Woesearchaeales_SCGC_AAA286E23 = `SCGC_AAA286-E23`)
sum.coral.abund <- sum.coral.abund %>% dplyr::rename(RelAbund_Uncultured_Alteromonadaceaeae = uncultured)
View(sum.coral.abund)
erich.abund <- merge(erich, sum.water.abund, by = "sample.id")
View(erich.abund)
?merge()
?base::merge()
erich.abund <- merge(erich, sum.water.abund, by = "sample.id", all = TRUE)
View(erich.abund)
erich.abund <- merge(erich.abund, sum.coral.abund, by = "sample.id", all = TRUE)
View(erich.abund)
#coalesce the two columns that have the same names
erich.abund %>%
mutate(RelAbund_Litoricola = coalesce(RelAbund_Litoricola.x, RelAbund_Litoricola.y),
RelAbund_Uncultured_Alteromonadaceaeae= coalesce(RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y))
View(erich.abund)
#coalesce the two columns that have the same names
erich.abund <- erich.abund %>%
mutate(RelAbund_Litoricola = coalesce(RelAbund_Litoricola.x, RelAbund_Litoricola.y),
RelAbund_Uncultured_Alteromonadaceaeae= coalesce(RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y))
View(erich.abund)
erich.abund <- merge(erich, sum.water.abund, by = "sample.id", all = TRUE)
erich.abund <- merge(erich.abund, sum.coral.abund, by = "sample.id", all = TRUE)
#coalesce the two columns that have the same names
erich.abund <- erich.abund %>%
mutate(RelAbund_Litoricola = coalesce(RelAbund_Litoricola.x, RelAbund_Litoricola.y),
RelAbund_Uncultured_Alteromonadaceaeae = coalesce(RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y)) %>%
subset(erich,abund, select = -c(RelAbund_Litoricola.x, RelAbund_Litoricola.y, RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y))
#coalesce the two columns that have the same names
erich.abund <- erich.abund %>%
mutate(RelAbund_Litoricola = coalesce(RelAbund_Litoricola.x, RelAbund_Litoricola.y),
RelAbund_Uncultured_Alteromonadaceaeae = coalesce(RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y)) %>%
subset(erich.abund, select = -c(RelAbund_Litoricola.x, RelAbund_Litoricola.y, RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y))
#coalesce the two columns that have the same names
erich.abund <- erich.abund %>%
mutate(RelAbund_Litoricola = coalesce(RelAbund_Litoricola.x, RelAbund_Litoricola.y),
RelAbund_Uncultured_Alteromonadaceaeae = coalesce(RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y)) %>%
subset(select = -c(RelAbund_Litoricola.x, RelAbund_Litoricola.y, RelAbund_Uncultured_Alteromonadaceaeae.x, RelAbund_Uncultured_Alteromonadaceaeae.y))
View(erich.abund)
ord.water <- ordinate(physeq.water.r, "NMDS", "bray", trymax = 500) #Run 20 stress 0.061
stressplot(ord.water)
scores.water <- (scores(ord.water))
scores(ord.water)
ord.water
str(ord.water)
scores.water <- (vegan::scores(ord.water))
scores.water
scores.water <- (scores.water$sites)
scores.water
scores.water$sample.id <- rownames(scores.water)
scores.water
scores.water <- (vegan::scores(ord.water))
scores.water <- (scores.water$sites)
scores.water
rownames(scores.water)
scores.water$sample.id <- as.factor(rownames(scores.water))
View(scores.water)
scores.water <- (vegan::scores(ord.water))
scores.water <- (scores.water$sites)
rownames(scores.water)
row.names(scores.water)
scores.water$sample.id <- row.names(scores.water)
scores.water <- (vegan::scores(ord.water))
scores.water <- (scores.water$sites)
str(scores.water)
scores.water <- as.data.frame(vegan::scores(ord.water))
scores.water
scores.water <- (vegan::scores(ord.water))
scores.water <- as.data.frame(scores.water$sites)
scores.water
scores.water$sample.id <- row.names(scores.water)
scores.water
row.names(scores.water) <- NULL
scores.water
ord.coral <- ordinate(physeq.coral.r, "NMDS", "bray", trymax = 500) #Run 20 stress 0.061
stressplot(ord.coral)
ord.coral <- ordinate(physeq.coral.r, "NMDS", "bray", trymax = 1000) #Run 20 stress 0.061
stressplot(ord.coral)
str(ord.coral)
scores.coral <- (vegan::scores(ord.coral))
scores.coral <- as.data.frame(scores.coral$sites)
scores.coral$sample.id <- row.names(scores.coral)
row.names(scores.coral) <- NULL
View(scores.coral)
scores <- rbind(scores.water, scores.coral)
scores
erich.abund.scores <- merge(erich.abund, scores, by = sample.id, all = TRUE)
erich.abund.scores <- merge(erich.abund, scores, by = "sample.id", all = TRUE)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = sample.type) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side), linetype = sample.type) +
theme_bw() +
facet_wrap(~motu)
erich.abund.scores
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = erich.abund.scores$sample.type) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side), linetype = erich.abund.scores$sample.type) +
theme_bw() +
facet_wrap(~motu)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = erich.abund.scores$sample.type) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side), linetype = 18) +
theme_bw() +
facet_wrap(~motu)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = erich.abund.scores$sample.type) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side)) +
theme_bw() +
facet_wrap(~motu)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = sample.type) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side)) +
theme_bw() +
facet_wrap(~motu)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2))
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side), size = 3, shape = erich.abund.scores$sample.type)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side, shape = sample.type), size = 3)
ggplot(erich.abund.scores, aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(colour = island.side, shape = sample.type), size = 3) +
scale_colour_manual(values = c("#63A022", "#2866AB")) +
#geom_text(label = scores.outrm$sample.name) +
stat_ellipse(aes(x = NMDS1, y = NMDS2, colour = island.side)) +
theme_bw() +
facet_wrap(~motu)
data.water <- as(sample_data(physeq.water.r), "data.frame")
data.coral <- as(sample_data(physeq.coral.r), "data.frame")
#Since we used bray curtis above
bc.water <- phyloseq::distance(physeq.water.r, method = "bray")
bc.coral <- phyloseq::distance(physeq.coral.r, method = "bray")
disp.water <- betadisper(bc.water, erich.abund.scores$motu, type = "centroid")
disp.water <- betadisper(bc.water, data.water$motu, type = "centroid")
boxplot(disp.water)
disp.water
str(disp.water)
?betadisper()
groups <- factor(data.water$motu, data.water$island.side)
bc.water.aie <- bc.water %>% filter(data.water$motu == aie)
disp.water <- betadisper(bc.water, data.water$motu & data.water$island.side, type = "centroid")
disp.water <- betadisper(bc.water, data.water$motu/data.water$island.side, type = "centroid")
View(data.water)
#In order to do this, we need a variable that is a combined "motu_island.side"
data.water$motu_island.side <- (paste(data.water$motu, data.water$island.side, sep = "_"))
data.coral$motu_island.side <- paste(data.coral$motu, data.coral$island.side, sep = "_")
data.coral$motu_island.side
disp.water <- betadisper(bc.water, data.water$motu_island.side, type = "centroid")
boxplot(disp.water)
disp.coral <- betadisper(bc.coral, data.coral$motu_island.side, type = "centroid")
boxplot(disp.coral)
str(boxplot(disp.coral))
str(disp.coral)
disp.coral.data <- (vegan::scores(disp.coral))
disp.coral.data
ggplot(disp.coral.data, aes(x = PCoA1, y = PCoA2))
disp.coral.data <- (vegan::distances(disp.coral))
distances(disp.coral)
distance(disp.coral)
disp.coral$distances
coral.dists <- as.data.frame(disp.coral$distances)
coral.dists
coral.dists$sample.id <- row.names(coral.dists)
row.names(coral.dists) <- NULL
coral.dists
water.dists <- as.data.frame(disp.water$distances)
water.dists$sample.id <- row.names(water.dists)
row.names(water.dists) <- NULL
distances <- rbind(water.dists, coral.dists)
water.dists
coral.dists <- coral.dists %>% dplyr::rename(beta_dispersion = disp.coral$distances)
coral.dists <- coral.dists %>% dplyr::rename(beta_dispersion = `disp.coral$distances`)
water.dists <- water.dists %>% dplyr::rename(beta_dispersion = `disp.water$distances`)
water.dists
coral.dists
distances <- rbind(water.dists, coral.dists)
distances
erich.abund.scores.betadsip <- merge(erich.abund.scores, distances, by = "sample.id")
erich.abund.scores.betadisp <- merge(erich.abund.scores, distances, by = "sample.id")
View(erich.abund.scores.betadisp)
#How to extract the values... which are the values? distances...
coral.dists <- as.data.frame(disp.coral$distances)
coral.dists$sample.id <- row.names(coral.dists)
row.names(coral.dists) <- NULL
coral.dists <- coral.dists %>% dplyr::rename(beta_dispersion_motu_islandside = `disp.coral$distances`)
water.dists <- as.data.frame(disp.water$distances)
water.dists$sample.id <- row.names(water.dists)
row.names(water.dists) <- NULL
water.dists <- water.dists %>% dplyr::rename(beta_dispersion_motu_islandside = `disp.water$distances`)
distances <- rbind(water.dists, coral.dists)
erich.abund.scores.betadisp <- merge(erich.abund.scores, distances, by = "sample.id")
View(erich.abund.scores.betadisp)
###VERY LAST STEP
write.csv(erich.abund.scores.betadisp, "../output/nov2021_microbiome_metrics.csv")
###VERY LAST STEP
write.csv(erich.abund.scores.betadisp, "../output/nov2021_microbiome_metrics.csv")
###VERY LAST STEP
write.csv(erich.abund.scores.betadisp, "../output/nov2021_microbiome_metrics.csv", row.names = FALSE)
##Add a site-name category properly to match the metadata
erich.abund.scores.betadisp$site.name <- paste(erich.abund.scores.betadisp$motu, erich.abund.scores.betadisp$site, sep = "")
print(levels(erich.abund.scores.betadisp$site.name))
erich.abund.scores.betadisp$motu
print(erich.abund.scores.betadisp$site.name)
erich.abund.scores.betadisp <- erich.abund.scores.betadisp %>%
mutate(site.name = recode(site.name, aie1 = 'A1', aie2 = 'A2', reiono1 =  'Re1', reiono2 = "Re2", rimatuu1 ="Rm1", rimatuu2 = "Rm2"))
erich.abund.scores.betadisp$site.name
###VERY LAST STEP
write.csv(erich.abund.scores.betadisp, "../output/nov2021_microbiome_metrics.csv", row.names = FALSE)
ggplot(erich.abund.scores.betadisp, x = motu_island.side, y = beta_dispersion) +
geom_boxplot()
View(erich.abund.scores.betadisp)
ggplot(erich.abund.scores.betadisp, x = motu_island.side, y = beta_dispersion_motu_islandside) +
geom_boxplot()
?geom_boxplot()
?ggplot()
ggplot(erich.abund.scores.betadisp, aes(x = motu_island.side, y = beta_dispersion_motu_islandside)) +
geom_boxplot()
ggplot(erich.abund.scores.betadisp, aes(x = site.name, y = beta_dispersion_motu_islandside)) +
geom_boxplot()
ggplot(erich.abund.scores.betadisp, aes(x = site.name, y = beta_dispersion_motu_islandside)) +
geom_boxplot() +
facet_wrap(~sample.type)
ggplot(erich.abund.scores.betadisp, aes(x = motu, y = beta_dispersion_motu_islandside)) +
geom_boxplot() +
facet_wrap(~sample.type)
ggplot(erich.abund.scores.betadisp, aes(x = site.name, y = beta_dispersion_motu_islandside)) +
geom_boxplot() +
facet_wrap(~sample.type)
ggplot(erich.abund.scores.betadisp, aes(x = site.name, y = beta_dispersion_motu_islandside)) +
geom_boxplot() +
facet_wrap(~sample.type) +
theme_bw()
library(vegan)
trial <- read.csv("~/Desktop/sample-data.csv", header = TRUE)
ord <- metaMDS(trial)
vegdist(trial, method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE)
vegdist(trial[,2:12], method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE)
ord <- metaMDS(trial[,2:12])
plot(ord)
trial <- read.csv("~/Desktop/sample-data.csv", header = TRUE)
ord <- metaMDS(trial[,2:12])
ord <- metaMDS(trial[,2:11])
plot(ord)
trial2 <- read.csv("~/Desktop/sample_2.csv", header = TRUE)
ord <- metaMDS(trial2[,2:11])
plot(ord)
diversity(trial,index = "simpson")
diversity(trial[, 2:11],index = "simpson")
diversity(trial[, 2:11],index = "shannon")
vegdist(trial[,2:11], method="euclidean", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE)
dissim <- vegdist(trial[,2:11], method="euclidean", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE)
ord <- metaMDS(dissim)
plot(ord)
dissim <- vegdist(trial[,2:11], method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE)
ord <- metaMDS(dissim)
plot(ord)
dissim <- as.matrix(vegdist(trial[,2:11], method="bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE))
ord <- metaMDS(dissim, distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
data(dune)
View(dune)
ord <- metaMDS(dune, distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
View(dune)
write.csv(dune, "~Desktop/dune.csv")
write.csv(dune, "~/Desktop/dune.csv")
trial3 <- read.csv("~/Desktop/trial_3.csv", header = TRUE)
ord <- metaMDS(trial3[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
trial4 <- read.csv("~/Desktop/trial_4.csv", header = TRUE)
trial4 <- read.csv("~/Desktop/trial4.csv", header = TRUE)
ord <- metaMDS(trial4[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
ord <- metaMDS(trial5[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
metadata <- read.csv("~/Desktop/metadata.csv", header = TRUE)
diversity(trial5[, 2:19],index = "shannon")
diversity(trial5[, 2:19],index = "simpson")
diversity(trial5[, 2:19],index = "richness")
?diversity()
erich(trial5[, 2:19])
scores <- as.data.frame(scores(ord)) #creates XY coordinate table for each sample - this can be put in ggplot
scores(ord)
scores.ord <- as.data.frame(scores(ord)) #creates XY coordinate table for each sample - this can be put in ggplot
scores(ord)
as.data.frame(scores(ord))
scores.ord <- as.data.frame(scores(ord)) #creates XY coordinate table for each sample - this can be put in ggplot
scores.ord <- scores(ord) #creates XY coordinate table for each sample - this can be put in ggplot
scores.ord
scores.ord <- as.data.frame(scores.ord)#creates XY coordinate table for each sample - this can be put in ggplot
scores(ord$species)
scores.ord <- as.data.frame(scores(ord$species))
scores.ord
scores.ord <- as.data.frame(scores(ord$sites))
scores.ord
scores.ord <- as.data.frame(scores(ord$site))
scores.ord
scores.ord <- as.data.frame(scores(ord$species))
scores.ord <- scores(ord)
scores(ord)
str(ord)
scores(ord$site)
scores(ord$sites)
scores.ord <- scores(ord)
scores(ord)
ord$sites
scores(ord$sites)
scores.ord$sites
scores.ord <- as.data.frame(scores.ord$sites)
scores.ord
scores.ord$sample <- metadata$sample.name
scores.ord$dms <- metadata$DMS.production.pmol.mg.
scores.ord$pop <- metadata$population
scores.ord$pig <- metadata$pigmentation
scores.ord$treatment <- metadata$treatment
library(ggplot2)
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$treatment, shape = metadata$DMS.production.pmol.mg.)) #number of colonies may be too high for shapes- may need to manually do this
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$treatment, shape = metadata$pigmentation)) #number of colonies may be too high for shapes- may need to manually do this
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$treatment, shape = metadata$population)) #number of colonies may be too high for shapes- may need to manually do this
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$pigmentation, shape = metadata$population)) #number of colonies may be too high for shapes- may need to manually do this
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
ord <- metaMDS(dissim, distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
ord <- metaMDS(dissim, distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
ord <- metaMDS(trial5[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
ord <- metaMDS(trial5[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
ord <- metaMDS(trial5[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
scores.ord <- scores(ord)
scores.ord <- as.data.frame(scores.ord$sites)
#Add variables eg. sample names or treatment names etc.
scores.ord$sample <- metadata$sample.name
scores.ord$dms <- metadata$DMS.production.pmol.mg.
scores.ord$pop <- metadata$population
scores.ord$pig <- metadata$pigmentation
scores.ord$treatment <- metadata$treatment
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$pigmentation, shape = metadata$population)) #number of colonies may be too high for shapes- may need to manually do this
trial5 <- read.csv("~/Desktop/trial5.csv", header = TRUE)
ord <- metaMDS(trial5[,2:19], distance = "bray", k = 2, trymax = 100, engine = c("monoMDS", "isoMDS"))
plot(ord)
scores.ord <- scores(ord)
scores.ord <- as.data.frame(scores.ord$sites)
#Add variables eg. sample names or treatment names etc.
scores.ord$sample <- metadata$sample.name
scores.ord$dms <- metadata$DMS.production.pmol.mg.
scores.ord$pop <- metadata$population
scores.ord$pig <- metadata$pigmentation
scores.ord$treatment <- metadata$treatment
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$pigmentation, shape = metadata$population)) #number of colonies may be too high for shapes- may need to manually do this
ggplot(scores.ord, aes(x = NMDS1, y= NMDS2)) +
geom_point(aes(colour = metadata$DMS.production.pmol.mg., shape = metadata$population)) #number of colonies may be too high for shapes- may need to manually do this
specnumber(trial5[,2:19])
shannon <- diversity(trial5[,2:19], "shannon")
richness <- specnumber(trial5[,2:19])
evenness <- shannon/log(richness)
richness
evenness
metadata$richness <- richness
metadata$shannon <- shannon
metadata$evenness <- evenness
histogram(metadata)
histogram(metadata$richness)
histogram(metadata$evenness)
histogram(metadata$shannon)
histogram(metadata$DMS.production.pmol.mg.)
df <- df()
?df()
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(plyr)
library(vegan)
load("16s_phyloseq4HE.RData")
getwd()
setwd("~/Documents/OSUDocs/Projects/ACE21/Hawaiian-coral-thermal-tolerance/Data/16s_analysis/")
load("16s_phyloseq4HE.RData")
bac.exp <- subset_samples(Bac.seq, Type == "sample")
bac.ambient <- subset_samples(bac.exp, Time.Point == "T0")
print(microbiome::summarize_phyloseq(bac.ambient))
bac.ambient.ra <- transform_sample_counts(bac.ambient, function(x) x/ sum(x))
bac.ambient.data <- as(sample_data(bac.ambient), "data.frame")
#Let's run a quick permanova to look at differences in bray curtis by species
bc.amb <- phyloseq::distance(bac.ambient.ra, method = "bray")
vegan::adonis2(bc.amb ~ Species, data = bac.ambient.data)
