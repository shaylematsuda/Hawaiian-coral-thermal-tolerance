print("Hello World")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plyr")
install.packages("nlme")
install.packages("car")
install.packages("ape")
install.packages("tidyverse")
install.packages("vegan")
install.packages("decontam")
install.packages("sjPlot")
install.packages("effects")
install.packages("devtools")
install.packages("EnvStats")
install.packages("emmeans")
install.packages("ggfortify")
install.packages("glmmTMB")
install.packages("glmnet")
install.packages("indicspecies")
install.packages("lmerTest")
install.packages("mapdata")
install.packages("microbiome")
install.packages("DESeq2")
install.packages("multcompView")
install.packages("mvabund")
install.packages("MuMIn")
install.packages("shiny")
install.packages("shinyjs")
install.packages("qiime2R")
source('http://bioconductor.org/biocLite.R')
#phyloseq
#decontam
#qiime2R
#DESeq2
#microbiome
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
biocManager::install('phyloseq')
BiocManager::install('phyloseq')
BiocManager::install("microbiome")
BiocManager::install("decontam")
BiocManager::install("DESEq2")
BiocManager::install("DESeq2")
remotes::install_github("jbisanz/qiime2R")
physeq.prune <- readRDS("~/Dropbox/MacBook_Transfer/comparison/physeq_prune_asv.RDS")
#Unrarefied - cut out every sample with below 1000 reads
physeq.nr <- prune_samples(sample_sums(physeq.prune)>=1000, physeq.prune)
library(qiime2R)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyverse)
library(gridExtra)
library(vegan)
library(decontam)
#Unrarefied - cut out every sample with below 1000 reads
physeq.nr <- prune_samples(sample_sums(physeq.prune)>=1000, physeq.prune)
bad.samples <- c("KI15BFMD107", "KI15BFMD108", "KI15BFMD119", "KI15BFMD123", "KI15BFMD135", "KI15BFMD145", "KI15BFMD195", "KI15BFMD196", "KI15BFMD208", "KI15BFMD232_EMP")
all.samples <- sample_names(physeq.nr)
all.samples <- all.samples[!(all.samples %in% bad.samples)]
physeq.nr <- prune_samples(all.samples, physeq.nr)
data.nr <- as(sample_data(physeq.nr), "data.frame")
#Rarefied to 1000 reads
physeq.r <- rarefy_even_depth(physeq.prune, sample.size = 1000, rngseed = 711)
bad.samples.r <- c("KI15BFMD107", "KI15BFMD108", "KI15BFMD119", "KI15BFMD123", "KI15BFMD135", "KI15BFMD145", "KI15BFMD195", "KI15BFMD196", "KI15BFMD208", "KI15BFMD232_EMP")
all.samples.r <- sample_names(physeq.r)
all.samples.r <- all.samples.r[!(all.samples.r %in% bad.samples.r)]
physeq.r <- prune_samples(all.samples.r, physeq.r)
data.r <- as(sample_data(physeq.r), "data.frame")
#Relative abundance
physeq.ra <- transform_sample_counts(physeq.nr, function(x) x/ sum(x))
data.ra <- as(sample_data(physeq.ra), "data.frame")
View(data.nr)
#First check barplots by Phylum and Family
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + facet_grid(row = vars(seq_platform))
View(data.nr)
p + facet_grid(row = vars(seq_platform), col = vars(field_host_name))
p + facet_grid(row = vars(seq_platform))
p + facet_grid(row = vars(seq_platform), col = vars(field_host_name))
View(data.r)
data.ra$sample_label <- factor(data.ra$sample_label, levels = c("KI15BFMD082", "KI15BFMD089", "KI15BFMD124", "KI15BFMD142",
"KI15BFMD144", "KI15BFMD146", "KI15BFMD190", "KI15BFMD193",
"KI15BFMD221", "KI15BFMD228", "KI15BFMD240", "KI15BFMD079",
"KI15BFMD086", "KI15BFMD091", "KI15BFMD105", "KI15BFMD112",
"KI15BFMD115", "KI15BFMD122", "KI15BFMD141", "KI15BFMD189",
"KI15BFMD201", "KI15BFMD229", "KI15BFMD230", "KI15BFMD235"))
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + facet_grid(row = vars(seq_platform))
View(data.nr)
data.ra$sample_label <- factor(data.ra$sample_label, levels = c("KI15BFMD082", "KI15BFMD089", "KI15BFMD124", "KI15BFMD142",
"KI15BFMD144", "KI15BFMD146", "KI15BFMD190", "KI15BFMD193",
"KI15BFMD221", "KI15BFMD228", "KI15BFMD240", "KI15BFMD079",
"KI15BFMD086", "KI15BFMD091", "KI15BFMD105", "KI15BFMD112",
"KI15BFMD115", "KI15BFMD122", "KI15BFMD141", "KI15BFMD189",
"KI15BFMD201", "KI15BFMD229", "KI15BFMD230", "KI15BFMD235"))
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + facet_grid(row = vars(seq_platform))
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p$data$sample_label <- factor(x = p$data$sample_label, levels = c("KI15BFMD082", "KI15BFMD089", "KI15BFMD124", "KI15BFMD142",
"KI15BFMD144", "KI15BFMD146", "KI15BFMD190", "KI15BFMD193",
"KI15BFMD221", "KI15BFMD228", "KI15BFMD240", "KI15BFMD079",
"KI15BFMD086", "KI15BFMD091", "KI15BFMD105", "KI15BFMD112",
"KI15BFMD115", "KI15BFMD122", "KI15BFMD141", "KI15BFMD189",
"KI15BFMD201", "KI15BFMD229", "KI15BFMD230", "KI15BFMD235"))
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + facet_grid(row = vars(seq_platform))
p
p + facet_grid(rows = vars(seq_platform))
library(qiime2R)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyverse)
library(gridExtra)
library(vegan)
library(decontam)
physeq.prune <- readRDS("~/Dropbox/MacBook_Transfer/comparison/physeq_prune_asv.RDS")
#Unrarefied - cut out every sample with below 1000 reads
physeq.nr <- prune_samples(sample_sums(physeq.prune)>=1000, physeq.prune)
bad.samples <- c("KI15BFMD107", "KI15BFMD108", "KI15BFMD119", "KI15BFMD123", "KI15BFMD135", "KI15BFMD145", "KI15BFMD195", "KI15BFMD196", "KI15BFMD208", "KI15BFMD232_EMP")
all.samples <- sample_names(physeq.nr)
all.samples <- all.samples[!(all.samples %in% bad.samples)]
physeq.nr <- prune_samples(all.samples, physeq.nr)
data.nr <- as(sample_data(physeq.nr), "data.frame")
#Rarefied to 1000 reads
physeq.r <- rarefy_even_depth(physeq.prune, sample.size = 1000, rngseed = 711)
bad.samples.r <- c("KI15BFMD107", "KI15BFMD108", "KI15BFMD119", "KI15BFMD123", "KI15BFMD135", "KI15BFMD145", "KI15BFMD195", "KI15BFMD196", "KI15BFMD208", "KI15BFMD232_EMP")
all.samples.r <- sample_names(physeq.r)
all.samples.r <- all.samples.r[!(all.samples.r %in% bad.samples.r)]
physeq.r <- prune_samples(all.samples.r, physeq.r)
data.r <- as(sample_data(physeq.r), "data.frame")
#Relative abundance
physeq.ra <- transform_sample_counts(physeq.nr, function(x) x/ sum(x))
data.ra <- as(sample_data(physeq.ra), "data.frame")
estimate_richness_wPD <- function(physeq, split=TRUE, measures=NULL){
if( !any(otu_table(physeq)==1) ){
# Check for singletons, and then warning if they are missing.
# These metrics only really meaningful if singletons are included.
warning(
"The data you have provided does not have\n",
"any singletons. This is highly suspicious. Results of richness\n",
"estimates (for example) are probably unreliable, or wrong, if you have already\n",
"trimmed low-abundance taxa from the data.\n",
"\n",
"We recommended that you find the un-trimmed data and retry."
)
}
# If we are not splitting sample-wise, sum the species. Else, enforce orientation.
if( !split ){
OTU <- taxa_sums(physeq)
} else if( split ){
OTU <- as(otu_table(physeq), "matrix")
if( taxa_are_rows(physeq) ){ OTU <- t(OTU) }
}
# Define renaming vector:
renamevec = c("Observed", "Chao1", "ACE", "Shannon", "Simpson", "InvSimpson", "Fisher", "FaithPD")
names(renamevec) <- c("S.obs", "S.chao1", "S.ACE", "shannon", "simpson", "invsimpson", "fisher")
# If measures was not explicitly provided (is NULL), set to all supported methods
if( is.null(measures) ){
measures = as.character(renamevec)
}
# Rename measures if they are in the old-style
if( any(measures %in% names(renamevec)) ){
measures[measures %in% names(renamevec)] <- renamevec[names(renamevec) %in% measures]
}
# Stop with error if no measures are supported
if( !any(measures %in% renamevec) ){
stop("None of the `measures` you provided are supported. Try default `NULL` instead.")
}
# Initialize to NULL
outlist = vector("list")
# Some standard diversity indices
estimRmeas = c("Chao1", "Observed", "ACE")
if( any(estimRmeas %in% measures) ){
outlist <- c(outlist, list(t(data.frame(estimateR(OTU)))))
}
if( "Shannon" %in% measures ){
outlist <- c(outlist, list(shannon = diversity(OTU, index="shannon")))
}
if( "Simpson" %in% measures ){
outlist <- c(outlist, list(simpson = diversity(OTU, index="simpson")))
}
if( "InvSimpson" %in% measures ){
outlist <- c(outlist, list(invsimpson = diversity(OTU, index="invsimpson")))
}
if( "FaithPD" %in% measures){
outlist <- c(outlist, list(FaithPD = t(picante::pd(samp = OTU, tree = phy_tree(physeq), include.root = F))[1,] ))
}
if( "Fisher" %in% measures ){
fisher = tryCatch(fisher.alpha(OTU, se=TRUE),
warning=function(w){
warning("phyloseq::estimate_richness: Warning in fisher.alpha(). See `?fisher.fit` or ?`fisher.alpha`. Treat fisher results with caution")
suppressWarnings(fisher.alpha(OTU, se=TRUE)[, c("alpha", "se")])
}
)
if(!is.null(dim(fisher))){
colnames(fisher)[1:2] <- c("Fisher", "se.fisher")
outlist <- c(outlist, list(fisher))
} else {
outlist <- c(outlist, Fisher=list(fisher))
}
}
out = do.call("cbind", outlist)
# Rename columns per renamevec
namechange = intersect(colnames(out), names(renamevec))
colnames(out)[colnames(out) %in% namechange] <- renamevec[namechange]
# Final prune to just those columns related to "measures". Use grep.
colkeep = sapply(paste0("(se\\.){0,}", measures), grep, colnames(out), ignore.case=TRUE)
out = out[, sort(unique(unlist(colkeep))), drop=FALSE]
# Make sure that you return a data.frame for reliable performance.
out <- as.data.frame(out)
return(out)
}
#Alpha diversity
#Observed Sp. Richness and Shannon
erich <- estimate_richness_wPD(physeq.r, measures = c("Observed", "Shannon", "FaithPD"))
erich$platform <- data.r$seq_platform
erich$sample <- data.r$sample_label
erich$species <- data.r$field_host_name
erich.mfol <- erich %>% filter(species == "Montipora foliosa")
erich.plob <- erich %>% filter(species == "Porites lobata")
model.d <- lme(Shannon ~ platform, random = ~1|sample, data = erich.plob, method = "REML")
library(nlme)
library(sjPlot)
library(effects)
model.d <- lme(Shannon ~ platform, random = ~1|sample, data = erich.plob, method = "REML")
plot(model.d)
qq.line(resid(model.d))
plot_grid(plot_model(model.d, type = "diag"))
plot(allEffects(model.d))
plot_model(model.d, type = "eff", terms = "platform")
anova(model.d)
summary(model.d)
newdata = data.frame(platform = levels(erich.plob$platform))
Xmat = model.matrix(~platform, data = newdata)
coefs = fixef(model.d)
fit = as.vector(coefs %*% t(Xmat))
se = sqrt(diag(Xmat %*% vcov(model.d) %*% t(Xmat)))
q = qt(0.975, df = nrow(model.d$data) - length(coefs) -
2)
newdata = cbind(newdata, fit = fit, lower = fit - q * se, upper = fit +
q * se)
plob.sh <- ggplot(newdata, aes(y = fit, x = platform)) + geom_pointrange(aes(ymin = lower,
ymax = upper)) + scale_y_continuous("Shannon Diversity Index") + theme_classic()
plob.sh
ggsave("~/Desktop/sh_plob.pdf")
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p$data$sample_label <- factor(x = p$data$sample_label, levels = c("KI15BFMD082", "KI15BFMD089", "KI15BFMD124", "KI15BFMD142",
"KI15BFMD144", "KI15BFMD146", "KI15BFMD190", "KI15BFMD193",
"KI15BFMD221", "KI15BFMD228", "KI15BFMD240", "KI15BFMD079",
"KI15BFMD086", "KI15BFMD091", "KI15BFMD105", "KI15BFMD112",
"KI15BFMD115", "KI15BFMD122", "KI15BFMD141", "KI15BFMD189",
"KI15BFMD201", "KI15BFMD229", "KI15BFMD230", "KI15BFMD235"))
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p
p + facet_grid(rows = vars(seq_platform))
ggsave("~/Desktop/barplot_phy_asvs.pdf")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_brewer(palette = "RdYlBu") +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(qiime2R)
library(phyloseq)
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyverse)
library(gridExtra)
library(vegan)
library(decontam)
library(RColorBrewer)
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_brewer(palette = "RdYlBu") +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
nb.cols <- 41
mycolors <- colorRampPalette(brewer.pal(11, "RdYlBu"))(nb.cols)
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(calues = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack') +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + facet_grid(rows = vars(seq_platform))
ggsave("~/Desktop/barplot_phy_asvs.pdf")
p <- plot_bar(physeq.ra, x = "sample_label", fill = "Phylum")
p$data$sample_label <- factor(x = p$data$sample_label, levels = c("KI15BFMD082", "KI15BFMD089", "KI15BFMD124", "KI15BFMD142",
"KI15BFMD144", "KI15BFMD146", "KI15BFMD190", "KI15BFMD193",
"KI15BFMD221", "KI15BFMD228", "KI15BFMD240", "KI15BFMD079",
"KI15BFMD086", "KI15BFMD091", "KI15BFMD105", "KI15BFMD112",
"KI15BFMD115", "KI15BFMD122", "KI15BFMD141", "KI15BFMD189",
"KI15BFMD201", "KI15BFMD229", "KI15BFMD230", "KI15BFMD235"))
p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack', width = 0.8) +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1 <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack', width = 0.8) +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1 + facet_grid(rows = vars(seq_platform))
ggsave("~/Desktop/barplot_phy_asvs.pdf")
ggsave("~/Desktop/barplot_phy_asvs.pdf")
p1 + geom_bar(aes(color = Family, fill = Family), stat = "identity", popsition = "stack") +
guides(fill = FALSE, color= FALSE) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme_classic(axis.text.x = element_text(angle = 90, hjust = 1))
p1 <- p + geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = 'stack', width = 0.7) +
#guides(fill = FALSE, color = FALSE) +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors) +
ylab("Relative Abundance") +
xlab("Sample Label") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p1 + facet_grid(rows = vars(seq_platform))
ggsave("~/Desktop/barplot_phy_asvs.pdf")
citation("sjPlot")
View(physeq.r)
citation("effects")
citation("ggplot2")
View(physeq.ra)
citation()
version()
Version()
install.packages("TmCalculator")
library(TmCalculator)
library(phyloseq)
library(ggplot2)
library(tidyr)
#Set working directory
setwd("~/Documents/OSUDocs/Projects/ACE21/Hawaiian-coral-thermal-tolerance/Data/16s_analysis/")
#Set working directory
setwd("~/Documents/OSUDocs/Projects/ACE21/Hawaiian-coral-thermal-tolerance/Data/16s_analysis/")
#bring in data from ANCOM
mcap.ancom.melt <- read.csv("ancom/output/by_treatment/mcap_ancom.csv")
pcomp.ancom.melt <- read.csv("ancom/output/by_treatment/pcomp_ancom.csv")
pvar.ancom.melt <- read.csv("") #So there are no significantly differentially abundant taxa for p var by treatment
pacu.ancom.melt <- read.csv("ancom/output/by_treatment/pacu_ancom.csv")
#bring in data from CORE
mcap.core.melt <- read.csv("core_microbiome/output/mcap_core.csv")
pcomp.core.melt <- read.csv("core_microbiome/output/pcomp_core.csv")
pvar.core.melt <- read.csv("core_microbiome/output/pvar_core.csv")
pacu.core.melt <- read.csv("core_microbiome/output/pacu_core.csv")
#bring in the data from top abundant taxa
mcap.abund.melt <- read.csv("top_abundance/output/mcap_abund.csv")
pcomp.abund.melt <-read.csv("top_abundance/output/pcomp_abund.csv")
pvar.abund.melt <- read.csv("top_abundance/output/pvar_abund.csv")
pacu.abund.melt <- read.csv("top_abundance/output/pacu_abund.csv")
#merge all data
mcap.top <- rbind(mcap.ancom.melt, mcap.core.melt, mcap.abund.melt)
View(mcap.top)
mcap.top <- mcap.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
write.csv(mcap.top, "bac_figures/output/mcap_top_taxa.csv")
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt[,2:22], pcomp.abund.melt)
pcomp.top <- pcomp.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
pcomp.top <- pcomp.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
write.csv(pcomp.top, "bac_figures/output/pcomp_top_taxa.csv")
#merge all data
pvar.top <- rbind(pvar.core.melt, pvar.abund.melt)
pvar.top <- pvar.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
write.csv(pvar.top, "bac_figures/output/pvar_top_taxa.csv")
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt[,2:22], pacu.abund.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt[,2:22], pacu.abund.melt[,2:22])
#merge all data
pacu.ancom.melt$X <- rownames(pacu.ancom.melt) #apparently ancom doesn't have an "X" variable (but it's a dummy variable so it's fine to add or remove)
pacu.abund.melt$X <- rownames(pacu.abund.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.core.melt$X <- rownames(pacu.core.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
View(pacu_ancom.melt)
pacu.core.melt <- read.csv("core_microbiome/output/pacu_core.csv")
pacu.abund.melt <- read.csv("top_abundance/output/pacu_abund.csv")
pacu.ancom.melt <- read.csv("ancom/output/by_treatment/pacu_ancom.csv")
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
#merge all data
pacu.ancom.melt$X <- rownames(pacu.ancom.melt) #apparently ancom doesn't have an "X" variable (but it's a dummy variable so it's fine to add or remove)
pacu.abund.melt$X <- rownames(pacu.abund.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
View(pacu.ancom.melt)
pacu.ancom.melt$X <- NULL
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.ancom.melt$X.1 <- NULL
pacu.abund.melt$X <- NULL
pacu.core.melt$X <- NULL
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
#Add a column to label by OTU and by genus so we can have taxonomic annotation
pacu.top <- pacu.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
write.csv(pacu.top, "bac_figures/output/pacu_top_taxa.csv")
resdf.mcap <- read.csv("ancom/output/ancom_mcap_res.csv")
resdf.mcap <- read.csv("ancom/output/by_treatment/ancom_mcap_res.csv")
figdf.mcap <- read.csv("ancom/output/by_treatment/ancom_mcap_figdata.csv")
figdf.mcap
ancom.mcap.res <- merge(figdf.mcap,tax, by = "taxa_id" & "contrast")
ancom.mcap.res <- merge(figdf.mcap, resdf.mcap, by = "taxa_id" & "contrast")
resdf.mcap <- resdf.mcap %>% unite(taxa_id, contrast, col = tax_time, sep = '-')
resdf.mcap
resdf.mcap <- resdf.mcap %>% unite(taxa_id, W, col = tax_W, sep = '-')
figdf.mcap <- figdf.mcap %>% unite(taxa_id, y, col = tax_W, sep = '-')
ancom.mcap.res <- merge(figdf.mcap, resdf.mcap, by = "tax_W")
write.csv(ancom.mcap.res, "ancom/output/by_treatment/ancom_mcap_alldata.csv")
ancom.mcap.res
View(ancom.mcap.res)
View(resdf.mcap)
