figdf.pacu$col_genus[figdf.pacu$col_genus != "Pseudoalteromonas" &
figdf.pacu$col_genus != "Synechococcus_CC9902" &
figdf.pacu$col_genus != "Filomicrobium"] <- NA
levels(figdf.pacu$col_genus)
# add new factor
figdf.pacu$col_genus <- factor(figdf.pacu$col_genus, levels = c(levels(figdf.pacu$col_genus), "Other"))
# convert NAs to other
figdf.pacu$col_genus[is.na(figdf.pacu$col_genus)] = "Other"
pacu.p <- ggplot(figdf.pacu, aes(x = x, y = y, color = col_genus)) +
geom_vline(xintercept = 0, color = "grey") +
geom_point(size = 3) +
facet_grid(~contrast) +
ylab("W statistic") +
xlab("CLR mean difference") +
scale_color_manual(name = "Genus", values = kelly_colors) +
geom_hline(yintercept = cut_off["detected_0.6"], linetype = "dashed") +
geom_text(data = dat_ann, aes(x = x, y = y, label = label),
size = 4, vjust = -0.5, hjust = 1, color = "orange", parse = TRUE) +
ggtitle("Pocillopora acuta")
pacu.p
ggsave("ancom/output/pacu_ancom.pdf")
##Extract the data for use in bubble plots
pvar.true <- filter(resdf.pvar, detected_0.6 == "TRUE")  #Hmm there are no "TRUE" taxa
pvar.otus <- (pvar.true$taxa_id)
pvar.ra <- transform_sample_counts(pvar, function(x) x/ sum(x))
pvar.ancom <- prune_taxa(pvar.otus, pvar.ra)
pacu.core.melt <- read.csv("core_microbiome/output/pacu_core.csv")
pacu.abund.melt <- read.csv("top_abundance/output/pacu_abund.csv")
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
levels(pacu.core.melt$Time.Point)[levels(pacu.core.melt$Time.Point)=="F1"] <- "T1"
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.ancom.melt
pacu.core.melt
pacu.ancom.melt
pacu.core.melt
str(pacu.ancom.melt)
str(pacu.core.melt)
View(pacu.core.melt)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt[,2:22], pacu.abund.melt)
pacu.core.melt[,2:22]
str(pacu.abund.melt)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt[,2:22], pacu.abund.melt[,2:22])
#merge all data
pacu.ancom.melt$X <- rownames(pacu.ancom.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.top
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.abund.melt[order(pacu.abund.melt$Time.Point, pacu.abund.melt$Treatment, pacu.abund.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
##4. Pocillopora acuta
pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
levels(sample_data(pacu)$Time.Point)[levels(sample_data(pacu)$Time.Point)=="F1"] <- "T1"
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
levels(pacu.abund.melt$Time.Point)[levels(pacu.abund.melt$Time.Point)=="F1"] <- "T1"
write.csv(pacu.abund.melt, "top_abundance/output/pacu_abund.csv")
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.abund.melt[order(pacu.abund.melt$Time.Point, pacu.abund.melt$Treatment, pacu.abund.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
#merge all data
pacu.ancom.melt$X <- rownames(pacu.ancom.melt) #apparently ancom doesn't have an "X" variable (but it's a dummy variable so it's fine to add or remove)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
pacu.abund.melt
pacu.core.melt
pacu.abund.melt
##4. Pocillopora acuta
pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
levels(sample_data(pacu)$Time.Point)[levels(sample_data(pacu)$Time.Point)=="F1"] <- "T1"
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
write.csv(pacu.abund.melt, "top_abundance/output/pacu_abund.csv")
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
pacu.ancom.melt
str(pacu.ancom.melt)
str(pacu.abund.melt)
str(pacu.core.melt)
pacu.abund.melt$X <- rownames(pacu.abund.melt)
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
view(pacu.top)
View(pacu.top)
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.abund.melt[order(pacu.abund.melt$Time.Point, pacu.abund.melt$Treatment, pacu.abund.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00001")
pacu.list <- as.list(pacu.toget$Sample)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
ggsave("bac_figures/output/pacu_top_bubble.pdf")
#Add a column to label by OTU and by genus so we can have taxonomic annotation
pacu.top <- pacu.top %>% unite(OTU, Genus ,col='otu_genus',sep='-')
#Add a column to label by OTU and by genus so we can have taxonomic annotation
library(tdyr)
pacu.top <- pacu.top %>% unite(OTU, Genus ,col='otu_genus',sep='-')
#Add a column to label by OTU and by genus so we can have taxonomic annotation
library(plyr)
pacu.top <- pacu.top %>% unite(OTU, Genus ,col='otu_genus',sep='-')
#Add a column to label by OTU and by genus so we can have taxonomic annotation
library(tidyr)
pacu.top <- pacu.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
ggsave("bac_figures/output/pacu_top_bubble.pdf")
#bring in data from CORE
mcap.core.melt <- read.csv("core_microbiome/output/mcap_core.csv")
pcomp.core.melt <- read.csv("core_microbiome/output/pcomp_core.csv")
pvar.core.melt <- read.csv("core_microbiome/output/pvar_core.csv")
#bring in the data from top abundant taxa
mcap.abund.melt <- read.csv("top_abundance/output/mcap_abund.csv")
pcomp.abund.melt <-read.csv("top_abundance/output/pcomp_abund.csv")
pvar.abund.melt <- read.csv("top_abundance/output/pvar_abund.csv")
##1 Montipora Capitata
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
mcap.toget <- mcap.core.melt[order(mcap.core.melt$Time.Point, mcap.core.melt$Treatment, mcap.core.melt$Clade),]
mcap.toget <- filter(mcap.toget, OTU == "Otu00001")
mcap.list <- as.list(mcap.toget$Sample)
#merge all data
mcap.top <- rbind(mcap.ancom.melt, mcap.core.melt, mcap.abund.melt)
#bring in data from ANCOM
mcap.ancom.melt <- read.csv("ancom/output/mcap.ancom.csv")
#bring in data from ANCOM
mcap.ancom.melt <- read.csv("ancom/output/mcap_ancom.csv")
pcomp.ancom.melt <- read.csv("ancom/output/pcomp_ancom.csv")
#merge all data
mcap.top <- rbind(mcap.ancom.melt, mcap.core.melt, mcap.abund.melt)
mcap.top <- mcap.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.mcap <- ggplot(mcap.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.mcap$data$Sample <- as.factor(p.mcap$data$Sample)
p.mcap$data$Sample <- factor(p.mcap$data$Sample, levels = mcap.list)
print(p.mcap)
View(mcap.top)
mcap.ancom.melt
mcap.core.melt
mcap.abund.melt
##1. Montipora capitata
mcap <- subset_samples(Bac.seq, Species == "Montipora_capitata")
mcap.ra <- transform_sample_counts(mcap, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(mcap.ra), TRUE)[1:10])
mcap.abund = prune_taxa(TopNOTUs, mcap.ra)
mcap.abund.melt <- psmelt(mcap.abund)
mcap.abund.melt$top.group <- "abund"
write.csv(mcap.abund.melt, "top_abundance/output/mcap_abund.csv")
#bring in the data from top abundant taxa
mcap.abund.melt <- read.csv("top_abundance/output/mcap_abund.csv")
#merge all data
mcap.top <- rbind(mcap.ancom.melt, mcap.core.melt, mcap.abund.melt)
mcap.top <- mcap.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.mcap <- ggplot(mcap.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.mcap$data$Sample <- as.factor(p.mcap$data$Sample)
p.mcap$data$Sample <- factor(p.mcap$data$Sample, levels = mcap.list)
print(p.mcap)
ggsave("bac_figures/output/mcap_top_bubble.pdf")
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00073")
pcomp.list <- as.list(pcomp.toget$Sample)
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
pcomp.top <- pcomp.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu0001")
pcomp.list <- as.list(pcomp.toget$Sample)
pcomp.list
pcomp.toget
##2. Porites compressa
pcomp <- subset_samples(Bac.seq, Species == "Porites_compressa")
pcomp.ra <- transform_sample_counts(pcomp, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pcomp.ra), TRUE)[1:10])
pcomp.abund = prune_taxa(TopNOTUs, pcomp.ra)
pcomp.abund.melt <- psmelt(pcomp.abund)
pcomp.abund.melt$top.group <- "abund"
write.csv(pcomp.abund.melt, "top_abundance/output/pcomp_abund.csv")
##Extract the data to use in bubble plots
pcomp.true <- filter(resdf.pcomp, detected_0.6 == "TRUE")
pcomp.otus <- (pcomp.true$taxa_id)
pcomp.ra <- transform_sample_counts(pcomp, function(x) x/ sum(x))
pcomp.ancom <- prune_taxa(pcomp.otus,pcomp.ra)
pcomp.ancom.melt <- psmelt(pcomp.ancom)
pcomp.ancom.melt$top.group <- "differential"
write.csv(pcomp.ancom.melt, "ancom/output/pcomp_ancom.csv")
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu0001")
pcomp.list <- as.list(pcomp.toget$Sample)
pcomp.list
pcomp.ancom.melt
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget
pcomp.toget <- filter(pcomp.toget, OTU == "Otu0001")
pcomp.list <- as.list(pcomp.toget$Sample)
pcomp.list
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00001")
pcomp.list <- as.list(pcomp.toget$Sample)
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
str(pcomp.ancom.melt)
str(pcomp.core.melt)
str(pcomp.abund.melt)
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt[,2:22], pcomp.abund.melt)
pcomp.top <- pcomp.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
pcomp.list
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00001")
pcomp.toget
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00002")
pcomp.toget
pcomp.list <- as.list(pcomp.toget$Sample)
pcomp.list
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
ggsave("bac_figures/output/pcomp_top_bubble.pdf")
##3 Pavona varians
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pvar.toget <- pvar.core.melt[order(pvar.core.melt$Time.Point, pvar.core.melt$Treatment, pvar.core.melt$Clade),]
pvar.toget <- filter(pvar.toget, OTU == "Otu00001")
pvar.list <- as.list(pvar.toget$Sample)
#merge all data
pvar.top <- rbind(pvar.core.melt, pvar.abund.melt)
pvar.top <- pvar.top %>% unite(OTU, Genus, col='otu_genus',sep='-')
p.pvar<- ggplot(pvar.top, aes(x = Sample, y = otu_genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pvar$data$Sample <- as.factor(p.pvar$data$Sample)
p.pvar$data$Sample <- factor(p.pvar$data$Sample, levels = pvar.list)
print(p.pvar)
ggsave("bac_figures/output/pvar_top_bubble.pdf")
pacu.ancom.melt <- read.csv("ancom/output/by_treatment/pacu_ancom.csv")
write.csv(pcomp.ancom.melt, "ancom/output/by_treatment/pcomp_ancom.csv")
write.csv(pvar.ancom.melt, "ancom/output/by_treatment/pvar_ancom.csv")
##Extract the data for use in bubble plots
pvar.true <- filter(resdf.pvar, detected_0.6 == "TRUE")  #Hmm there are no "TRUE" taxa
pvar.otus <- (pvar.true$taxa_id)
pvar.ra <- transform_sample_counts(pvar, function(x) x/ sum(x))
pvar.ancom <- prune_taxa(pvar.otus, pvar.ra)
pvar.ancom.melt <- psmelt(pvar.ancom)
pvar.ancom.melt$top.group <- "differential"
write.csv(pvar.ancom.melt, "ancom/output/by_treatment/pvar_ancom.csv")
write.csv(pacu.ancom.melt, "ancom/output/by_treatment/pcomp_ancom.csv")
write.csv(pacu.ancom.melt, "ancom/output/by_treatment/pacu_ancom.csv")
write.csv(pcomp.ancom.melt, "ancom/output/by_treatment/pcomp_ancom.csv")
mcap.top
##If splitting by time point use the following:
##P comp T1
feature_table <- OTU.pcomp.t1
meta_data <- sample_data(pcomp.t1)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
#Step 2 run the ANCOM
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
##if splitting by time point do the following:
resdf.pcomp.t1 <- as.data.frame(res$out)
## compiling results from each contrast for the figure
figdf.pcomp.t1 <- as.data.frame(res$fig$data)
figdf.pcomp.t1$contrast <- "T1"
rownames(figdf.pcomp.t1) <- NULL
##P comp TF
feature_table <- OTU.pcomp.tf
meta_data <- sample_data(pcomp.tf)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
#Step 2 run the ANCOM
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
resdf.pcomp.tf <- as.data.frame(res$out)
##rbind together
resdf.pcomp <- rbind(resdf.pcomp.t1, resdf.pcomp.tf)
figdf.pcomp.tf <- as.data.frame(res$fig$data)
figdf.pcomp.tf$contrast <- "TF"
rownames(figdf.pcomp.tf) <- NULL
##rbind your two datasets together
figdf.pcomp<- rbind(figdf.pcomp.t1, figdf.pcomp.tf)
# add taxonomy
tax<-as(tax_table(pcomp),"matrix")
head(tax)
tax<-as.data.frame(tax)
colnames(tax)
tax$taxa_id <- rownames(tax)
rownames(tax) <- NULL
dim(tax)
head(tax)
#Merge taxonomy with your figure data
figdf.pcomp <- merge(figdf.pcomp,tax, by = "taxa_id")
resdf.pcomp <- merge(resdf.pcomp, tax, by = "taxa_id")
head(resdf.pcomp)
head(figdf.pcomp)
write.csv(resdf.pcomp, "ancom/output/ancom_pcomp_res.csv")
write.csv(figdf.pcomp, "ancom/output/ancom_pcomp_figdata.csv")
##Extract the data to use in bubble plots
pcomp.true <- filter(resdf.pcomp, detected_0.6 == "TRUE")
pcomp.true
pcomp.otus <- (pcomp.true$taxa_id)
pcomp.ra <- transform_sample_counts(pcomp, function(x) x/ sum(x))
pcomp.ancom <- prune_taxa(pcomp.otus,pcomp.ra)
pcomp.ancom.melt <- psmelt(pcomp.ancom)
pcomp.ancom.melt$top.group <- "differential"
write.csv(pcomp.ancom.melt, "ancom/output/by_treatment/pcomp_ancom.csv")
# Step 3: Volcano Plot
# Number of taxa except structural zeros
n_taxa = ifelse(is.null(struc_zero), nrow(figdf.pcomp), sum(apply(struc_zero, 1, sum) == 0))
# Cutoff values for declaring differentially abundant taxa
cut_off = c(0.9 * (n_taxa -1), 0.8 * (n_taxa -1), 0.7 * (n_taxa -1), 0.6 * (n_taxa -1))
names(cut_off) = c("detected_0.9", "detected_0.8", "detected_0.7", "detected_0.6")
# Annotation data
dat_ann = data.frame(x = min(figdf.pcomp$x), y = cut_off["detected_0.6"], label = "W[0.6]")
##Specialised Plot
# order genus
x = tapply(figdf.pcomp$y, figdf.pcomp$Genus, function(x) max(x))
x = sort(x, TRUE)
cut_off #View cutoff value
x #View CLR ratios and pick the ones above cut-off to add below
n_taxa
##Specialised Plot
# order genus
x = tapply(figdf.pcomp$y, figdf.pcomp$Genus, function(x) max(x))
x = sort(x, TRUE)
x #View W values and pick the ones above cut-off to add below
names(cut_off) = c("detected_0.9", "detected_0.8", "detected_0.7", "detected_0.6")
# Cutoff values for declaring differentially abundant taxa
cut_off = c(0.9 * (n_taxa -1), 0.8 * (n_taxa -1), 0.7 * (n_taxa -1), 0.6 * (n_taxa -1))
cut_off
pcomp.true
nrow(figdf.pcomp)
