pvar.abund.melt <- psmelt(pvar.abund)
pvar.abund.melt$top.group <- "abund"
write.csv(pvar.abund.melt, "top_abundance/output/pvar_abund.csv")
##4. Pocillopora acuta
pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
write.csv(pacu.abund.melt, "top_abundance/output/mcap_abund.csv")
##If splitting by time point use the following:
##P comp T1
feature_table <- OTU.pcomp.t1
meta_data <- sample_data(pcomp.t1)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
sample_var <- "Sample.ID"
group_var <- NULL
out_cut <- 0.05  #numerical fraction, below 5% = outlier zeros, above 95% = outlier values
zero_cut <- 0.90 #numerical fraction, taxa with proportion of zeros above 90% are removed
lib_cut <- 1000 #number, removes any samples with less than lib_cut reads
neg_lb <- TRUE
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
main_var <- "Treatment"
p_adj_method <- "BH" #default: Benjamini-Hochberg procedure
alpha <- 0.05 #level of significance
adj_formula <- NULL
rand_formula <- NULL
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
##if splitting by time point do the following:
resdf.pcomp.t1 <- as.data.frame(res$out)
##P comp TF
feature_table <- OTU.pcomt.tf
meta_data <- sample_data(pcomp.tf)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
resdf.pcomp.tf <- as.data.frame(res$out)
##rbind together
resdf.pcomp <- rbind(resdf.pcomp.t1, resdf.pcomp.tf)
# add taxonomy
tax<-as(tax_table(pcomp),"matrix")
head(tax)
tax<-as.data.frame(tax)
colnames(tax)
tax$taxa_id <- rownames(tax)
rownames(tax) <- NULL
dim(tax)
head(tax)
resdf.pcomp <- merge(resdf.pcomp, tax, by = "taxa_id")
##Extract the data to use in bubble plots
pcomp.true <- filter(resdf.pcomp, detected_0.6 == "TRUE")
pcomp.otus <- (pcomp.true$taxa_id)
pcomp.ra <- transform_sample_counts(pcomp, function(x) x/ sum(x))
pcomp.ancom <- prune_taxa(pcomp.otus,mcap.ra)
pcomp.ancom.melt <- psmelt(pcomp.ancom)
pcomp.ancom.melt$top.group <- "differential"
write.csv(pcomp.ancom.melt, "ancom/output/pcomp_ancom.csv")
#Pvar T1
feature_table <- OTU.pvar.t1
meta_data <- sample_data(pvar.t1)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
#extract data
resdf.pvar.t1 <- as.data.frame(res$out)
resdf.pvar.tf <- as.data.frame(res$out)
#Pvar TF
feature_table <- OTU.pvar.tf
meta_data <- sample_data(pvar.tf)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
resdf.pvar.tf <- as.data.frame(res$out)
#rbind together the data from both time points
resdf.pvar <- rbind(resdf.pvar.t1, resdf.pvar.tf)
##Extract the data for use in bubble plots
pvar.true <- filter(resdf.pvar, detected_0.6 == "TRUE")
pvar.otus <- (pvar.true$taxa_id)
pvar.ra <- transform_sample_counts(pvar, function(x) x/ sum(x))
pvar.ancom <- prune_taxa(pvar.otus,mcap.ra)
pvar.ancom.melt <- psmelt(pvar.ancom)
pvar.ancom <- prune_taxa(pvar.otus, pvar.ra)
pvar.otus <- (pvar.true$taxa_id)
pvar.otus
pvar.true
u
#P acu T1
feature_table <- OTU.pacu.t1
meta_data <- sample_data(pacu.t1)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
#extract data
resdf.pacu.t1 <- as.data.frame(res$out)
#P acu TF
feature_table <- OTU.pacu.tf
meta_data <- sample_data(pacu.tf)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
resdf.pacu.tf <- as.data.frame(res$out)
#rbind them together
resdf.pacu <- rbind(resdf.pacu.t1, resdf.pacu.tf)
##Extract the data for use in bubble plots
pacu.true <- filter(resdf.pacu, detected_0.6 == "TRUE")  #Hmm there are no "TRUE" taxa
pacu.otus <- (pacu.true$taxa_id)
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
pacu.ancom <- prune_taxa(pacu.otus, pacu.ra)
pacu.ancom.melt <- psmelt(pacu.ancom)
pacu.ancom.melt$top.group <- "differential"
write.csv(pacu.ancom.melt, "ancom/output/pcomp_ancom.csv")
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.core.melt[order(pcomp.core.melt$Time.Point, pcomp.core.melt$Treatment, pcomp.core.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00001")
pcomp.list <- as.list(pcomp.toget$Sample)
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
pcomp.ancom.melt
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00002")
pcomp.list <- as.list(pcomp.toget$Sample)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
pcomp.toget
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.core.melt[order(pcomp.core.melt$Time.Point, pcomp.core.melt$Treatment, pcomp.core.melt$Clade),]
pcomp.toget
levels(pcomp.toget$Sample)
pcomp.list
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00001")
pcomp.list <- as.list(pcomp.toget$Sample)
pcomp.list
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.core.melt[order(pcomp.core.melt$Time.Point, pcomp.core.melt$Treatment, pcomp.core.melt$Clade),]
pcomp.toget
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00073")
pcomp.list <- as.list(pcomp.toget$Sample)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
##P comp TF
feature_table <- OTU.pcomp.tf
#Porites compressa
pcomp <- subset_samples(Bac.seq, Species == "Porites_compressa")
pcomp.t1 <- subset_samples(pcomp, Time.Point == "T1")
pcomp.tf <- subset_samples(pcomp, Time.Point == "TF")
##If splitting by time point use the following:
##P comp T1
feature_table <- OTU.pcomp.t1
meta_data <- sample_data(pcomp.t1)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
sample_var <- "Sample.ID"
group_var <- NULL
out_cut <- 0.05  #numerical fraction, below 5% = outlier zeros, above 95% = outlier values
zero_cut <- 0.90 #numerical fraction, taxa with proportion of zeros above 90% are removed
lib_cut <- 1000 #number, removes any samples with less than lib_cut reads
neg_lb <- TRUE
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
main_var <- "Treatment"
p_adj_method <- "BH" #default: Benjamini-Hochberg procedure
alpha <- 0.05 #level of significance
adj_formula <- NULL
rand_formula <- NULL
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
##if splitting by time point do the following:
resdf.pcomp.t1 <- as.data.frame(res$out)
##P comp TF
feature_table <- OTU.pcomp.tf
OTU.pcomp.tf <- t(otu_table(pcomp.tf))
##P comp TF
feature_table <- OTU.pcomp.tf
meta_data <- sample_data(pcomp.tf)
levels(meta_data$Treatment) #Ambient first, High Second = High will be positive
meta_data$Sample.ID <- as.character(meta_data$sample_name.1) #make sure your sample id is chr
sample_var <- "Sample.ID"
group_var <- NULL
out_cut <- 0.05  #numerical fraction, below 5% = outlier zeros, above 95% = outlier values
zero_cut <- 0.90 #numerical fraction, taxa with proportion of zeros above 90% are removed
lib_cut <- 1000 #number, removes any samples with less than lib_cut reads
neg_lb <- TRUE
pre_pro <- feature_table_pre_process(feature_table, meta_data, sample_var,
group_var,out_cut, zero_cut, lib_cut, neg_lb)
feature_table <- pre_pro$feature_table
meta_data <- pre_pro$meta_data
struc_zero <- pre_pro$structure_zeros
main_var <- "Treatment"
p_adj_method <- "BH" #default: Benjamini-Hochberg procedure
alpha <- 0.05 #level of significance
adj_formula <- NULL
rand_formula <- NULL #add in random effect
res <- ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha,
adj_formula, rand_formula)
resdf.pcomp.tf <- as.data.frame(res$out)
##rbind together
resdf.pcomp <- rbind(resdf.pcomp.t1, resdf.pcomp.tf)
##Extract the data to use in bubble plots
pcomp.true <- filter(resdf.pcomp, detected_0.6 == "TRUE")
pcomp.otus <- (pcomp.true$taxa_id)
pcomp.ra <- transform_sample_counts(pcomp, function(x) x/ sum(x))
pcomp.ancom <- prune_taxa(pcomp.otus,mcap.ra)
pcomp.ancom <- prune_taxa(pcomp.otus,pcomp.ra)
pcomp.ancom.melt <- psmelt(pcomp.ancom)
pcomp.ancom.melt$top.group <- "differential"
write.csv(pcomp.ancom.melt, "ancom/output/pcomp_ancom.csv")
##2 Porites compressa
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pcomp.toget <- pcomp.ancom.melt[order(pcomp.ancom.melt$Time.Point, pcomp.ancom.melt$Treatment, pcomp.ancom.melt$Clade),]
pcomp.toget <- filter(pcomp.toget, OTU == "Otu00073")
pcomp.list <- as.list(pcomp.toget$Sample)
#merge all data
pcomp.top <- rbind(pcomp.ancom.melt, pcomp.core.melt, pcomp.abund.melt)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
p.pcomp <- ggplot(pcomp.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pcomp$data$Sample <- as.factor(p.pcomp$data$Sample)
p.pcomp$data$Sample <- factor(p.pcomp$data$Sample, levels = pcomp.list)
print(p.pcomp)
ggsave("bac_figures/output/pcomp_top_bubble.pdf")
##3 Pavona varians
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pvar.toget <- pvar.core.melt[order(pvar.core.melt$Time.Point, pvar.core.melt$Treatment, pvar.core.melt$Clade),]
pvar.toget <- filter(pvar.toget, OTU == "Otu00001")
pvar.list <- as.list(pvar.toget$Sample)
#merge all data
pvar.top <- rbind(pvar.core.melt, pvar.abund.melt)
p.pvar<- ggplot(pvar.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pvar$data$Sample <- as.factor(p.pvar$data$Sample)
p.pvar$data$Sample <- factor(p.pvar$data$Sample, levels = pvar.list)
print(p.pvar)
p.pvar<- ggplot(pvar.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pvar$data$Sample <- as.factor(p.pvar$data$Sample)
p.pvar$data$Sample <- factor(p.pvar$data$Sample, levels = pvar.list)
print(p.pvar)
pcomp.top
View(pcomp.top)
ggsave("bac_figures/output/pvar_top_bubble.pdf")
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00001")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
p.pacu<- ggplot(pacu.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
pacu.top
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
p.pacu<- ggplot(pacu.top, aes(x = Sample, y = Genus, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
write.csv(pacu.abund.melt, "top_abundance/output/pacu_abund.csv")
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
View(pacu.top)
levels(pacu.top$top.group)
as.factor(pacu.top$top.group)
levels(pacu.top$Time.Point)
pacu.abund.melt
levels(pacu.abund.melt$Time.Point)
bac.data <- as(sample_data(Bac.seq), "data.frame"))
bac.data <- as(sample_data(Bac.seq), "data.frame")
levels(bac.data$Time.Point)
bac.exp <- subset_samples(Bac.seq, Type == "sample")
bac.data <- as(sample_data(bac.exp), "data.frame")
levels(bac.data$Time.Point)
##4. Pocillopora acuta
pacu <- subset_samples(bac.exp, Species == "Pocillopora_acuta")
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
write.csv(pacu.abund.melt, "top_abundance/output/pacu_abund.csv")
levels(pacu.abund.melt$Time.Point)
##4 Pocillopora acuta
#First this is a work around to get a list of the samples in the right order for plotting
#in order of: time, treatment, clade
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
Bac.seq.pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
data.pacu <- as(sample_data(Bac.seq.pacu), "data.frame")
View(data.pacu)
##4. Pocillopora acuta
pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
pacu.abund.melt$Time.Point <- revalue(pacu.abund.melt$Time.Point, "F1" == "T1")
pacu.abund.melt$Time.Point <- revalue(pacu.abund.melt$Time.Point, c("T0" = "T0", "T1" = "T1",  "F1" == "T1", "TF" = "TF"))
##4. Pocillopora acuta
pacu <- subset_samples(Bac.seq, Species == "Pocillopora_acuta")
pacu.ra <- transform_sample_counts(pacu, function(x) x/ sum(x))
# Selecting top 10 OTUs
TopNOTUs = names(sort(taxa_sums(pacu.ra), TRUE)[1:10])
pacu.abund = prune_taxa(TopNOTUs, pacu.ra)
pacu.abund.melt <- psmelt(pacu.abund)
pacu.abund.melt$top.group <- "abund"
pacu.abund.melt$Time.Point <- revalue(pacu.abund.melt$Time.Point, c("T0" = "T0", "T1" = "T1",  "F1" == "T1", "TF" = "TF"))
pacu.abund.melt$Time.Point
levels(pacu.abund.melt$Time.Point)
levels(pacu.abund.melt$Time.Point)[levels(pacu.abund.melt$Time.Point)=="F1"] <- "T1"
levels(pacu.abund.melt$Time.Point)
write.csv(pacu.abund.melt, "top_abundance/output/pacu_abund.csv")
levels(pacu.ancom.melt$Time.Point)[levels(pacu.ancom.melt$Time.Point)=="F1"] <- "T1"
write.csv(pacu.ancom.melt, "ancom/output/pcomp_ancom.csv")
levels(pacu.core.melt$Time.Point)[levels(pacu.core.melt$Time.Point)=="F1"] <- "T1"
pacu.toget <- pacu.core.melt[order(pacu.core.melt$Time.Point, pacu.core.melt$Treatment, pacu.core.melt$Clade),]
pacu.toget <- filter(pacu.toget, OTU == "Otu00019")
pacu.list <- as.list(pacu.toget$Sample)
#merge all data
pacu.top <- rbind(pacu.ancom.melt, pacu.core.melt, pacu.abund.melt)
p.pacu <- ggplot(pacu.top, aes(x = Sample, y = OTU, size = Abundance, color = Time.Point, shape = Treatment)) +
geom_point() +
scale_shape_manual(values = c(16,18)) +
scale_size_area(max_size = 6, breaks = c(0.05, 0.1, 0.3, 0.5, 0.7, 0.9 )) +
coord_fixed(ratio = 0.9) +
scale_color_manual(values=c("sandybrown", "tomato4","darkslategray4")) +
facet_grid(top.group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p.pacu$data$Sample <- as.factor(p.pacu$data$Sample)
p.pacu$data$Sample <- factor(p.pacu$data$Sample, levels = pacu.list)
print(p.pacu)
ggsave("bac_figures/output/pacu_top_bubble.pdf")
print(p.pvar)
